AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: 'Deploys a Lambda function to process input data'

Parameters:

  SourceSystemName:
    Type: String
    Description: 'The name of the source system to ingest (3-15 lowercase characters)'
    AllowedPattern: '^[a-z]{3,15}$'

  StageName:
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
    Description: 'The stage of deployment'

  PublicKey:
    Type: String
    Default: 'None'
    Description: 'The upstream public key of the source system for verifying incoming manifests'

  PrivateKey:
    Type: String
    Default: 'None'
    Description: 'The downstream private key to sign manifests with when writing to the processed bucket'

Resources:

  IngestLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${StageName}-${SourceSystemName}-input-lambda-function'
      Handler: 'com.aws.ingest.lambda.input.InputLambda'
      Runtime: java8
      Timeout: 900
      MemorySize: 1024
      CodeUri: ../target/IngestPipeline-1.0.0.jar
      Role:
        Fn::ImportValue:
          !Sub '${StageName}-${SourceSystemName}-input-lambda-role-arn'
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            BatchSize: 1
            Enabled: true
            Queue: !GetAtt 'InputBucketQueue.Arn'
      Environment:
        Variables:
          CONFIG_BUCKET:
            Fn::ImportValue:
              !Sub '${StageName}-${SourceSystemName}-s3-input-bucket'
          PROCESSED_BUCKET:
            Fn::ImportValue:
              !Sub '${StageName}-${SourceSystemName}-s3-processed-bucket'
          PROCESSED_KMS_ID:
            Fn::ImportValue:
              !Sub '${StageName}-${SourceSystemName}-kms-processed-key-id'
          PUBLIC_KEY: !Sub '${PublicKey}'
          PRIVATE_KEY: !Sub '${PrivateKey}'
  InputBucketQueue:
    Type: AWS::SQS::Queue
    Properties:
      MaximumMessageSize: 262144
      MessageRetentionPeriod: 1209600
      QueueName: !Sub '${StageName}-input-${SourceSystemName}-queue'
      VisibilityTimeout: 960
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt InputBucketRedriveQueue.Arn
        maxReceiveCount: 5

  InputBucketRedriveQueue:
    Type: AWS::SQS::Queue
    Properties:
      MaximumMessageSize: 262144
      MessageRetentionPeriod: 1209600
      QueueName: !Sub '${StageName}-input-${SourceSystemName}-redrive-queue'
      VisibilityTimeout: 960

  InputBucketQueueSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt 'InputBucketQueue.Arn'
      Protocol: sqs
      RawMessageDelivery: true
      TopicArn:
        Fn::ImportValue:
          !Sub '${StageName}-${SourceSystemName}-sns-input-topic-arn'

  InputBucketQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref InputBucketQueue
      PolicyDocument:
        Statement:
          Effect: Allow
          Principal: "*"
          Action: sqs:SendMessage
          Resource: "*"
          Condition:
            ArnEquals:
              aws:SourceArn:
                Fn::ImportValue:
                  !Sub '${StageName}-${SourceSystemName}-sns-input-topic-arn'
